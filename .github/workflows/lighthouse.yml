name: Lighthouse CI

on:
  deployment_status:
  push:
    branches: [ master ]

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success' ||
      github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.4'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.0
          run_install: false
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: |
          pnpm --version
          pnpm install --frozen-lockfile

      - name: Wait for deployment (if PR)
        if: github.event_name == 'push'
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
        id: waitFor
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 300

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            ${{ github.event_name == 'deployment_status' && github.event.deployment_status.target_url || steps.waitFor.outputs.url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './lighthouse.config.js'
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
