name: Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches:
      - master
  workflow_run:
    workflows: ["Vercel Production Deployment"]
    types:
      - completed

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write
  deployments: write
  statuses: write

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.20.4"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.0
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}-20241221
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm --version
          pnpm install --no-frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Run type check
        run: pnpm type-check

      - name: Run lint
        run: pnpm lint

  Deploy-Preview:
    needs: Test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' &&
      !contains(github.event.pull_request.labels.*.name, 'skip-preview')
    environment:
      name: Preview
      url: ${{ steps.deploy.outputs.preview-url }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.20.4"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.0
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}-20241221
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm --version
          pnpm install --no-frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          alias-domains: |
            preview.justany.cg
            pr-${{ github.event.number }}.justany.cg

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            üöÄ Preview d√©ploy√© avec succ√®s !

            - üîó URL: ${{ steps.deploy.outputs.preview-url }}
            - üìù Commit: ${{ github.sha }}

            Pour tester :
            1. V√©rifiez que le d√©ploiement est bien termin√©
            2. Testez les fonctionnalit√©s sur l'environnement de preview
            3. Validez le bon fonctionnement de l'application

            Une fois valid√©, le d√©ploiement en production sera automatiquement d√©clench√©.
